function filter_duplicate(origin)
    res = {}
    for i = 1, #origin - 2, 2 do
        if i > 2 and origin[i - 2] == origin[i] and origin[i + 1] == origin[i - 1] then
        else
            --print(origin[i], origin[i + 1], i, i + 1)
            table.insert(res, origin[i])
            table.insert(res, origin[i + 1])
        end
    end
    return res
end

test = {0.24270509831248, 0.17633557568774,
0.28284271247462, 0.28284271247462,
0.28284271247462, 0.28284271247462,
0.17633557568774, 0.24270509831248,
0.12366442431226, 0.24270509831248,
0.07885966681787, 0.24270509831248,
0.038440711160134, 0.24270509831248,
0.0, 0.24270509831248,
-0.0, 0.24270509831248,
-0.038440711160134, 0.24270509831248,
-0.07885966681787, 0.24270509831248,
-0.12366442431226, 0.24270509831248,
-0.17633557568774, 0.24270509831248,
-0.28284271247462, 0.28284271247462,
-0.28284271247462, 0.28284271247462,
-0.24270509831248, 0.17633557568774,
-0.24270509831248, 0.12366442431226,
-0.24270509831248, 0.07885966681787,
-0.24270509831248, 0.038440711160134,
-0.24270509831248, 0.0,
-0.24270509831248, -0.0,
-0.24270509831248, -0.038440711160134,
-0.24270509831248, -0.07885966681787,
-0.24270509831248, -0.12366442431226,
-0.24270509831248, -0.17633557568774,
-0.28284271247462, -0.28284271247462,
-0.28284271247462, -0.28284271247462,
-0.17633557568774, -0.24270509831248,
-0.12366442431226, -0.24270509831248,
-0.07885966681787, -0.24270509831248,
-0.038440711160134, -0.24270509831248,
-0.0, -0.24270509831248,
0.0, -0.24270509831248,
0.038440711160134, -0.24270509831248,
0.07885966681787, -0.24270509831248,
0.12366442431226, -0.24270509831248,
0.17633557568774, -0.24270509831248,
0.28284271247462, -0.28284271247462,
0.28284271247462, -0.28284271247462,
0.24270509831248, -0.17633557568774,
0.24270509831248, -0.12366442431226,
0.24270509831248, -0.07885966681787,
0.24270509831248, -0.038440711160134,
0.24270509831248, -0.0
}

test_res = filter_duplicate(test)
--print('result')
print(#test)
for i = 1, #test_res, 2 do
    print(test_res[i], test_res[i + 1])
end
